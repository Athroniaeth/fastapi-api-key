name: Release Workflow

on:
  push:
    tags: [ 'v*' ]         # release only on version tags like v1.2.3
  workflow_dispatch:

permissions:
  contents: write          # needed for GitHub Releases
  id-token: write

jobs:
  test:
    name: Test (3.12)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up UV (Python 3.12)
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.12"

      - name: Cache UV
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-3.12-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.12-

      - name: Sync deps (+dev)
        run: uv sync --locked --all-extras --dev --no-progress -q

      - name: Run tests
        run: uv run test_ci

      - name: Lint / Format / Type-check
        run: uv run lint_ci

  publish:
    name: Publish to PyPI & GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ test ]
    runs-on: ubuntu-latest

    permissions:
      contents: write      # required by softprops/action-gh-release

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up UV (Python 3.12)
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.12"

      - name: Cache UV
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-3.12-${{ hashFiles('uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.12-

      - name: Build package
        run: uv build

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          set -e
          uv publish --verbose

      - name: Create GitHub Release (from tag)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

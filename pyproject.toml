[project]
name = "fastapi-api-key"
version = "0.3.0"
description = "fastapi-api-key provides secure, production-ready API key management for FastAPI. It offers pluggable hashing strategies (Argon2, bcrypt, or custom), backend-agnostic persistence (SQLAlchemy, in-memory, or your own repository), and an optional cache layer (aiocache, Redis). Includes a Typer CLI and a FastAPI router for CRUD management of keys."
readme = "README.md"
authors = [
    { name = "Athroniaeth", email = "pierre.chaumont@hotmail.fr" }
]
keywords = [
    "api",
    "api key",
    "authentication",
    "authorization",
    "security",
    "backend-agnostic",
    "fastapi",
    "typer",
]

classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Environment :: Web Environment",
    "Topic :: Security",
    "Topic :: Security :: Cryptography",
    "Topic :: Internet :: WWW/HTTP",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = []

[project.urls]
Homepage = "https://github.com/Athroniaeth/fastapi-api-key"
Documentation = "https://github.com/Athroniaeth/fastapi-api-key#readme"
Issues = "https://github.com/Athroniaeth/fastapi-api-key/issues"
Changelog = "https://github.com/Athroniaeth/fastapi-api-key/blob/main/CHANGELOG.md"


[project.optional-dependencies]
bcrypt = [
    "bcrypt>=5.0.0",
]
argon2 = [
    "argon2-cffi>=25.1.0",
]
sqlalchemy = [
    "sqlalchemy>=2.0.43",
]
core = [
    "sqlalchemy>=2.0.43",
    "argon2-cffi>=25.1.0",
    "bcrypt>=5.0.0",
]
aiocache = [
    "aiocache>=0.12.3",
]
fastapi = [
    "fastapi>=0.118.0",
]
all = [
    "fastapi>=0.118.0",
    "sqlalchemy>=2.0.43",
    "argon2-cffi>=25.1.0",
    "bcrypt>=5.0.0",
    "aiocache>=0.12.3",
]
cli = [
    "typer>=0.12.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
lint = "fastapi_api_key.__init__:lint"
test = "fastapi_api_key.__init__:test"

[dependency-groups]
dev = [
    "ty>=0.0.1a21",
    "ruff>=0.13.2",
    "bandit>=1.8.6",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-asyncio>=1.2.0",
    "pre-commit>=4.3.0",
    "commitizen>=4.9.1",
    "aiosqlite>=0.21.0",
    "uvicorn>=0.37.0",
    "typer>=0.12.5",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true
git_tag_version = true

[tool.pytest.ini_options]
# Automatically create html and xml coverage reports
addopts = [
    "--cov=src",
    "--cov-report=xml",
    "--doctest-modules",
    "--cov-report=html",
    "--cov-report=term-missing",
]

doctest_optionflags = [
    # Allow "..." in expected outputs
    "ELLIPSIS",
    # Ignore the multiple spaces
    "NORMALIZE_WHITESPACE",
    # Allow to test the type of exception
    "IGNORE_EXCEPTION_DETAIL",
]
testpaths = ["src", "tests"]


[tool.coverage.run]
omit = ["src/fastapi_api_key/__init__.py"]
